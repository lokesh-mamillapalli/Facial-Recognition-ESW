// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FragmentContainerView fragmentContainer;

  @NonNull
  public final TextView textViewBatteryConsumption;

  @NonNull
  public final TextView textViewBatteryLevel;

  @NonNull
  public final TextView textViewCpuUsage;

  @NonNull
  public final Button textViewPersonCount;

  @NonNull
  public final TextView textViewSelectedModel;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FragmentContainerView fragmentContainer,
      @NonNull TextView textViewBatteryConsumption, @NonNull TextView textViewBatteryLevel,
      @NonNull TextView textViewCpuUsage, @NonNull Button textViewPersonCount,
      @NonNull TextView textViewSelectedModel, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.fragmentContainer = fragmentContainer;
    this.textViewBatteryConsumption = textViewBatteryConsumption;
    this.textViewBatteryLevel = textViewBatteryLevel;
    this.textViewCpuUsage = textViewCpuUsage;
    this.textViewPersonCount = textViewPersonCount;
    this.textViewSelectedModel = textViewSelectedModel;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_container;
      FragmentContainerView fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.textViewBatteryConsumption;
      TextView textViewBatteryConsumption = ViewBindings.findChildViewById(rootView, id);
      if (textViewBatteryConsumption == null) {
        break missingId;
      }

      id = R.id.textViewBatteryLevel;
      TextView textViewBatteryLevel = ViewBindings.findChildViewById(rootView, id);
      if (textViewBatteryLevel == null) {
        break missingId;
      }

      id = R.id.textViewCpuUsage;
      TextView textViewCpuUsage = ViewBindings.findChildViewById(rootView, id);
      if (textViewCpuUsage == null) {
        break missingId;
      }

      id = R.id.textViewPersonCount;
      Button textViewPersonCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewPersonCount == null) {
        break missingId;
      }

      id = R.id.textViewSelectedModel;
      TextView textViewSelectedModel = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectedModel == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, fragmentContainer,
          textViewBatteryConsumption, textViewBatteryLevel, textViewCpuUsage, textViewPersonCount,
          textViewSelectedModel, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
